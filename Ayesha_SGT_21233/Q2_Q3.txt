// You can test here :
 // https://repl.it/@ayeshabhatnagar/StringToIntandStringToFloat

#include <iostream>
#include <bits/stdc++.h> 

using namespace std; 
//declare function prototypes

float stringToFloat(const char *str);
int stringToInt(const char *str);

int main() 
{ 
  char str[] = "-1234675765756"; 
  int val = stringToInt(str); 
  cout<<val<<endl; 

  char str2[] = "-12346"; 
  val = stringToInt(str2); 
  cout<<val<<endl; 

  char str3[] = "-1235.345";
  val = stringToFloat(str3); 
  cout<<val<<endl; 
  return 0; 
} 

//Q3
float stringToFloat(const char *s) {
    float f = 0.0f, fraction = 0.0f;
 
    while(*s) {
        if(isdigit(*s)) {
          cout<<"Is digit";
            f *= 10;
            f += *s - '0';
            fraction *= 10;
        }
        else if(*s == '.') {
            fraction = 1;
        }
        else break;
    }
 
    if(fraction) f /= fraction;
 
    return f;
}

//Q2
int stringToInt(const char *str) 
{ 
  int sign = 1, base = 0, i = 0; 
  // if whitespaces then ignore. 
  while (str[i] == ' ') 
  { 
  i++; 
  } 
  // sign of number 
  if (str[i] == '-' || str[i] == '+') { 
    sign = 1 - 2 * (str[i++] == '-'); 
  } 
// checking for valid input 
  while (str[i] >= '0' && str[i] <= '9') 
  { 
    //handling overflow 
    if (base > INT_MAX / 10 || (base == INT_MAX / 10 && str[i] - '0' > 7)) { 
      if (sign == 1){
        cout<<"Input too high"<<endl;
        return INT_MAX; 
      } 
      else {
        cout<<"Input too low"<<endl;
        return INT_MIN; 
    }
    }//end if 
    base = 10 * base + (str[i++] - '0'); 
  }//end while 
  return base * sign; 
} 


